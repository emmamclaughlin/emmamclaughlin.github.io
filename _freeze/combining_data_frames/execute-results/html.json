{
  "hash": "3c9064cd567f441db42e7022a979790d",
  "result": {
    "markdown": "---\ntitle: \"Combining Data Frames\"\nformat: revealjs\ncode-fold: true\neditor: visual\n---\n\n\n## Loading packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tidybiology)\n\ndata(happy)\ndata(happy_join_one)\ndata(happy_full)\n```\n:::\n\n## Veiwing the data sets\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(happy)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 5\nColumns: 4\n$ country_name   <chr> \"Iraq\", \"Comoros\", \"Panama\", \"Maldives\", \"Spain\"\n$ ladder_score   <dbl> 4.854, 4.289, 6.180, 5.198, 6.491\n$ gdp            <dbl> 9.240, 8.031, 10.350, 9.826, 10.571\n$ social_support <dbl> 0.746, 0.626, 0.896, 0.913, 0.932\n```\n:::\n\n```{.r .cell-code}\nglimpse(happy_join_one)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 5\nColumns: 2\n$ country_name            <chr> \"Iraq\", \"Comoros\", \"Panama\", \"Maldives\", \"Spai…\n$ healthy_life_expectancy <dbl> 60.583, 57.349, 69.652, 70.600, 74.700\n```\n:::\n\n```{.r .cell-code}\nglimpse(happy_full)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 149\nColumns: 20\n$ country_name                              <chr> \"Finland\", \"Denmark\", \"Switz…\n$ region                                    <chr> \"Western Europe\", \"Western E…\n$ ladder_score                              <dbl> 7.842, 7.620, 7.571, 7.554, …\n$ standard_error_of_ladder_score            <dbl> 0.032, 0.035, 0.036, 0.059, …\n$ upperwhisker                              <dbl> 7.904, 7.687, 7.643, 7.670, …\n$ lowerwhisker                              <dbl> 7.780, 7.552, 7.500, 7.438, …\n$ logged_gdp_per_capita                     <dbl> 10.775, 10.933, 11.117, 10.8…\n$ social_support                            <dbl> 0.954, 0.954, 0.942, 0.983, …\n$ healthy_life_expectancy                   <dbl> 72.000, 72.700, 74.400, 73.0…\n$ freedom_to_make_life_choices              <dbl> 0.949, 0.946, 0.919, 0.955, …\n$ generosity                                <dbl> -0.098, 0.030, 0.025, 0.160,…\n$ perceptions_of_corruption                 <dbl> 0.186, 0.179, 0.292, 0.673, …\n$ ladder_score_in_dystopia                  <dbl> 2.43, 2.43, 2.43, 2.43, 2.43…\n$ explained_by_log_gdp_per_capita           <dbl> 1.446, 1.502, 1.566, 1.482, …\n$ explained_by_social_support               <dbl> 1.106, 1.108, 1.079, 1.172, …\n$ explained_by_healthy_life_expectancy      <dbl> 0.741, 0.763, 0.816, 0.772, …\n$ explained_by_freedom_to_make_life_choices <dbl> 0.691, 0.686, 0.653, 0.698, …\n$ explained_by_generosity                   <dbl> 0.124, 0.208, 0.204, 0.293, …\n$ explained_by_perceptions_of_corruption    <dbl> 0.481, 0.485, 0.413, 0.170, …\n$ dystopia_residual                         <dbl> 3.253, 2.868, 2.839, 2.967, …\n```\n:::\n:::\n\n\n## Combining `happy` and `happy_join_one` by row and column\n\n::: {.cell}\n\n```{.r .cell-code}\nbind_rows(happy, happy_join_one)%>% head(n=3) %>% knitr::kable()\n```\n\n::: {.cell-output-display}\n|country_name | ladder_score|    gdp| social_support| healthy_life_expectancy|\n|:------------|------------:|------:|--------------:|-----------------------:|\n|Iraq         |        4.854|  9.240|          0.746|                      NA|\n|Comoros      |        4.289|  8.031|          0.626|                      NA|\n|Panama       |        6.180| 10.350|          0.896|                      NA|\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnrow(happy)==nrow(happy_join_one)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n\n```{.r .cell-code}\nbind_cols(happy,happy_join_one)%>% head(n=3) %>% knitr::kable()\n```\n\n::: {.cell-output-display}\n|country_name...1 | ladder_score|    gdp| social_support|country_name...5 | healthy_life_expectancy|\n|:----------------|------------:|------:|--------------:|:----------------|-----------------------:|\n|Iraq             |        4.854|  9.240|          0.746|Iraq             |                  60.583|\n|Comoros          |        4.289|  8.031|          0.626|Comoros          |                  57.349|\n|Panama           |        6.180| 10.350|          0.896|Panama           |                  69.652|\n:::\n:::\n\n## Alternative to previous solution\n\n::: {.cell}\n\n```{.r .cell-code}\nhappy_join %>% inner_join(happy_join_one)%>% head(n=3) %>% knitr::kable()\n```\n\n::: {.cell-output-display}\n|country_name | healthy_life_expectancy|\n|:------------|-----------------------:|\n|Iraq         |                  60.583|\n|Comoros      |                  57.349|\n|Panama       |                  69.652|\n:::\n:::\n\n## Filtering out countries in `happy_full` that are also in `happy`\n\n::: {.cell}\n\n```{.r .cell-code}\nhappy_full %>% anti_join(happy) %>% head(n=3) %>% knitr::kable() \n```\n\n::: {.cell-output-display}\n|country_name |region         | ladder_score| standard_error_of_ladder_score| upperwhisker| lowerwhisker| logged_gdp_per_capita| social_support| healthy_life_expectancy| freedom_to_make_life_choices| generosity| perceptions_of_corruption| ladder_score_in_dystopia| explained_by_log_gdp_per_capita| explained_by_social_support| explained_by_healthy_life_expectancy| explained_by_freedom_to_make_life_choices| explained_by_generosity| explained_by_perceptions_of_corruption| dystopia_residual|\n|:------------|:--------------|------------:|------------------------------:|------------:|------------:|---------------------:|--------------:|-----------------------:|----------------------------:|----------:|-------------------------:|------------------------:|-------------------------------:|---------------------------:|------------------------------------:|-----------------------------------------:|-----------------------:|--------------------------------------:|-----------------:|\n|Finland      |Western Europe |        7.842|                          0.032|        7.904|        7.780|                10.775|          0.954|                    72.0|                        0.949|     -0.098|                     0.186|                     2.43|                           1.446|                       1.106|                                0.741|                                     0.691|                   0.124|                                  0.481|             3.253|\n|Denmark      |Western Europe |        7.620|                          0.035|        7.687|        7.552|                10.933|          0.954|                    72.7|                        0.946|      0.030|                     0.179|                     2.43|                           1.502|                       1.108|                                0.763|                                     0.686|                   0.208|                                  0.485|             2.868|\n|Switzerland  |Western Europe |        7.571|                          0.036|        7.643|        7.500|                11.117|          0.942|                    74.4|                        0.919|      0.025|                     0.292|                     2.43|                           1.566|                       1.079|                                0.816|                                     0.653|                   0.204|                                  0.413|             2.839|\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}